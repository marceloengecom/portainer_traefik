################################################################################################
#
# Substitua as variáveis ${PORTAINER_DOMAIN} e ${DOCKER_NETWORK} pelos valores correspondentes
#
################################################################################################

services:

  agent:
    # Em ambiente de produção, defina uma versão devidamente testada do traefik
    # Conferir a versão em: https://hub.docker.com/r/portainer/portainer-ce/tags
    image: portainer/agent:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - ${DOCKER_NETWORK}
    ports:
      - "9001:9001"  # Porta necessária para comunicação com o Portainer CE   
    deploy:
      #mode: global # Roda 1 instância em cada nó do Swarm
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
         # - node.hostname == srvbotpro-master1

  portainer:
    # Em ambiente de produção, defina uma versão devidamente testada do traefik
    # Conferir a versão em: https://hub.docker.com/r/portainer/portainer-ce/tags
    image: portainer/portainer-ce:latest
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    volumes:
      - portainer_data:/data
    networks:
      - ${DOCKER_NETWORK}
    deploy:
      mode: replicated
      replicas: 1       # O Portainer CE não é projetado para ser executado com múltiplas réplicas.  Para HA, considere usar o Portainer Business Edition
      placement:
        constraints:
          - node.role == manager
         # - node.hostname == srvbotpro-master1
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=${DOCKER_NETWORK}"
        - "traefik.http.routers.portainer.rule=Host(`${PORTAINER_DOMAIN}`)"
        - "traefik.http.routers.portainer.entrypoints=websecure"
        - "traefik.http.routers.portainer.priority=1"
        - "traefik.http.routers.portainer.tls.certresolver=letsencryptresolver"
        - "traefik.http.routers.portainer.service=portainer"
        - "traefik.http.services.portainer.loadbalancer.server.port=9000"

networks:
  ${DOCKER_NETWORK}:
    external: true
    attachable: true
    name: ${DOCKER_NETWORK}

volumes:
  portainer_data:
    external: true
    name: portainer_data